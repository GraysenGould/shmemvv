.TH "src/tests/signaling/signaling_tests.hpp" 3 "Version 0.1" "shmemvv" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/tests/signaling/signaling_tests.hpp \- Contains function declarations for the OpenSHMEM signaling tests\&.  

.SH SYNOPSIS
.br
.PP
\fR#include 'routines\&.hpp'\fP
.br
\fR#include <shmem\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "bool \fBtest_shmem_put_signal\fP (void)"
.br
.RI "Tests the shmem_put_signal() routine\&. "
.ti -1c
.RI "bool \fBtest_shmem_put_signal_nbi\fP (void)"
.br
.RI "Tests the shmem_put_signal_nbi() routine\&. "
.ti -1c
.RI "bool \fBtest_shmem_signal_fetch\fP (void)"
.br
.RI "Tests the shmem_signal_fetch() routine\&. "
.in -1c
.SH "Detailed Description"
.PP 
Contains function declarations for the OpenSHMEM signaling tests\&. 


.PP
Definition in file \fBsignaling_tests\&.hpp\fP\&.
.SH "Function Documentation"
.PP 
.SS "bool test_shmem_put_signal (void )"

.PP
Tests the shmem_put_signal() routine\&. This test verifies that the shmem_put_signal() function correctly transfers a value and sets a signal on the target PE\&.
.PP
\fBReturns\fP
.RS 4
True if the test is successful, false otherwise\&. 
.RE
.PP

.PP
Definition at line \fB16\fP of file \fBsignaling_tests\&.cpp\fP\&.
.nf
16                                  {
17   static long dest = 0;
18   static long value = 12345;
19   static uint64_t signal = 0;
20   int mype = p_shmem_my_pe();
21   int npes = p_shmem_n_pes();
22 
23   if (npes < 2) {
24     return false;
25   }
26 
27   int target_pe = (mype + 1) % npes;
28 
29   p_shmem_barrier_all();
30 
31   if (mype == 0) {
32     p_shmem_long_put_signal(&dest, &value, 1, &signal, 1, target_pe, SHMEM_SIGNAL_SET);
33   }
34 
35   p_shmem_barrier_all();
36 
37   if (mype == 1) {
38     if (dest != 12345 || signal != 1) {
39       return false;
40     }
41   }
42 
43   return true;
44 }
.PP
.fi

.PP
References \fBp_shmem_barrier_all\fP, \fBp_shmem_long_put_signal\fP, \fBp_shmem_my_pe\fP, and \fBp_shmem_n_pes\fP\&.
.SS "bool test_shmem_put_signal_nbi (void )"

.PP
Tests the shmem_put_signal_nbi() routine\&. This test verifies that the shmem_put_signal_nbi() function correctly transfers a value and sets a signal on the target PE using non-blocking operations\&.
.PP
\fBReturns\fP
.RS 4
True if the test is successful, false otherwise\&. 
.RE
.PP

.PP
Definition at line \fB54\fP of file \fBsignaling_tests\&.cpp\fP\&.
.nf
54                                      {
55   static long dest = 0;
56   static long value = 67890;
57   static uint64_t signal = 0;
58   int mype = p_shmem_my_pe();
59   int npes = p_shmem_n_pes();
60 
61   if (npes < 2) {
62     return false;
63   }
64 
65   int target_pe = (mype + 1) % npes;
66 
67   p_shmem_barrier_all();
68 
69   if (mype == 0) {
70     p_shmem_long_put_signal_nbi(&dest, &value, 1, &signal, 1, target_pe, SHMEM_SIGNAL_SET);
71     p_shmem_quiet();
72   }
73 
74   p_shmem_barrier_all();
75 
76   if (mype == 1) {
77     if (dest != 67890 || signal != 1) {
78       return false;
79     }
80   }
81 
82   return true;
83 }
.PP
.fi

.PP
References \fBp_shmem_barrier_all\fP, \fBp_shmem_long_put_signal_nbi\fP, \fBp_shmem_my_pe\fP, \fBp_shmem_n_pes\fP, and \fBp_shmem_quiet\fP\&.
.SS "bool test_shmem_signal_fetch (void )"

.PP
Tests the shmem_signal_fetch() routine\&. This test verifies that the shmem_signal_fetch() function correctly fetches the signal value from the target PE\&.
.PP
\fBReturns\fP
.RS 4
True if the test is successful, false otherwise\&. 
.RE
.PP

.PP
Definition at line \fB93\fP of file \fBsignaling_tests\&.cpp\fP\&.
.nf
93                                    {
94   static uint64_t signal = 1;
95   uint64_t fetched_signal = 0;
96   int mype = p_shmem_my_pe();
97   int npes = p_shmem_n_pes();
98 
99   if (npes < 2) {
100     return false;
101   }
102 
103   p_shmem_barrier_all();
104 
105   if (mype == 1) {
106     fetched_signal = p_shmem_signal_fetch(&signal);
107     if (fetched_signal != 1) {
108       return false;
109     }
110   }
111 
112   return true;
113 }
.PP
.fi

.PP
References \fBp_shmem_barrier_all\fP, \fBp_shmem_my_pe\fP, \fBp_shmem_n_pes\fP, and \fBp_shmem_signal_fetch\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for shmemvv from the source code\&.
