.TH "src/include/routines.hpp" 3 "Version 0.1" "shmemvv" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/include/routines.hpp \- Contains routine pointers to avoid compiler errors if a routine is not implemented\&.  

.SH SYNOPSIS
.br
.PP
\fR#include <shmem\&.h>\fP
.br

.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef void(* \fBshmem_fake_routine_func\fP) (void)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_init_func\fP) (void)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_finalize_func\fP) (void)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_my_pe_func\fP) (void)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_n_pes_func\fP) (void)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_pe_accessible_func\fP) (int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_barrier_all_func\fP) (void)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_barrier_func\fP) (int PE_start, int logPE_stride, int PE_size, long *pSync)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_info_get_version_func\fP) (int *major, int *minor)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_info_get_name_func\fP) (char *name)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_global_exit_func\fP) (int status)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_init_thread_func\fP) (int requested, int *provided)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_query_thread_func\fP) (int *provided)"
.br
.ti -1c
.RI "typedef void *(* \fBshmem_ptr_func\fP) (const void *dest, int pe)"
.br
.ti -1c
.RI "typedef void *(* \fBshmem_malloc_func\fP) (size_t size)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_free_func\fP) (void *ptr)"
.br
.ti -1c
.RI "typedef void *(* \fBshmem_realloc_func\fP) (void *ptr, size_t size)"
.br
.ti -1c
.RI "typedef void *(* \fBshmem_align_func\fP) (size_t alignment, size_t size)"
.br
.ti -1c
.RI "typedef void *(* \fBshmem_malloc_with_hints_func\fP) (size_t size, long hints)"
.br
.ti -1c
.RI "typedef void *(* \fBshmem_calloc_func\fP) (size_t count, size_t size)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_addr_accessible_func\fP) (const void *addr, int pe)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_team_my_pe_func\fP) (shmem_team_t team)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_team_n_pes_func\fP) (shmem_team_t team)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_team_get_config_func\fP) (shmem_team_t team, long config_mask, shmem_team_config_t *config)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_team_translate_pe_func\fP) (shmem_team_t src_team, int src_pe, shmem_team_t dest_team)"
.br
.ti -1c
.RI "typedef shmem_team_t(* \fBshmem_team_split_strided_func\fP) (shmem_team_t parent_team, int start, int stride, int size, const shmem_team_config_t *config, long config_mask, shmem_team_t *new_team)"
.br
.ti -1c
.RI "typedef shmem_team_t(* \fBshmem_team_split_2d_func\fP) (shmem_team_t parent_team, int xrange, const shmem_team_config_t *xaxis_config, long xaxis_mask, shmem_team_t *xaxis_team, const shmem_team_config_t *yaxis_config, long yaxis_mask, shmem_team_t *yaxis_team)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_team_destroy_func\fP) (shmem_team_t team)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_ctx_create_func\fP) (long options, shmem_ctx_t *ctx)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_team_create_ctx_func\fP) (shmem_team_t team, long options, shmem_ctx_t *ctx)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_ctx_destroy_func\fP) (shmem_ctx_t ctx)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_ctx_get_team_func\fP) (shmem_ctx_t ctx, shmem_team_t *team)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_long_put_func\fP) (long *dest, const long *src, size_t nelems, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_long_p_func\fP) (long *dest, long value, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_long_iput_func\fP) (long *dest, const long *src, ptrdiff_t tst, ptrdiff_t sst, size_t nelems, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_long_get_func\fP) (long *dest, const long *src, size_t nelems, int pe)"
.br
.ti -1c
.RI "typedef long(* \fBshmem_long_g_func\fP) (const long *src, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_long_iget_func\fP) (long *dest, const long *src, ptrdiff_t tst, ptrdiff_t sst, size_t nelems, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_long_put_nbi_func\fP) (long *dest, const long *src, size_t nelems, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_long_get_nbi_func\fP) (long *dest, const long *src, size_t nelems, int pe)"
.br
.ti -1c
.RI "typedef unsigned long(* \fBshmem_ulong_atomic_fetch_func\fP) (const unsigned long *target, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_ulong_atomic_set_func\fP) (unsigned long *target, unsigned long value, int pe)"
.br
.ti -1c
.RI "typedef unsigned long(* \fBshmem_ulong_atomic_compare_swap_func\fP) (unsigned long *target, unsigned long cond, unsigned long value, int pe)"
.br
.ti -1c
.RI "typedef unsigned long(* \fBshmem_ulong_atomic_swap_func\fP) (unsigned long *target, unsigned long value, int pe)"
.br
.ti -1c
.RI "typedef unsigned long(* \fBshmem_ulong_atomic_fetch_inc_func\fP) (const unsigned long *target, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_ulong_atomic_inc_func\fP) (unsigned long *target, int pe)"
.br
.ti -1c
.RI "typedef unsigned long(* \fBshmem_ulong_atomic_fetch_add_func\fP) (const unsigned long *target, unsigned long value, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_ulong_atomic_add_func\fP) (const unsigned long *target, unsigned long value, int pe)"
.br
.ti -1c
.RI "typedef unsigned long(* \fBshmem_ulong_atomic_fetch_and_func\fP) (unsigned long *dest, unsigned long value, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_ulong_atomic_and_func\fP) (unsigned long *dest, unsigned long value, int pe)"
.br
.ti -1c
.RI "typedef unsigned long(* \fBshmem_ulong_atomic_fetch_or_func\fP) (unsigned long *dest, unsigned long value, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_ulong_atomic_or_func\fP) (unsigned long *dest, unsigned long value, int pe)"
.br
.ti -1c
.RI "typedef unsigned long(* \fBshmem_ulong_atomic_fetch_xor_func\fP) (unsigned long *dest, unsigned long value, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_ulong_atomic_xor_func\fP) (unsigned long *dest, unsigned long value, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_ulong_atomic_fetch_nbi_func\fP) (unsigned long *dest, const unsigned long *target, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_ulong_atomic_compare_swap_nbi_func\fP) (unsigned long *dest, unsigned long *target, unsigned long cond, unsigned long value, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_ulong_atomic_swap_nbi_func\fP) (unsigned long *dest, unsigned long *target, unsigned long value, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_ulong_atomic_fetch_inc_nbi_func\fP) (unsigned long *dest, const unsigned long *target, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_ulong_atomic_fetch_add_nbi_func\fP) (unsigned long *dest, const unsigned long *target, unsigned long value, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_ulong_atomic_fetch_and_nbi_func\fP) (unsigned long *fetch, unsigned long *dest, unsigned long value, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_ulong_atomic_fetch_or_nbi_func\fP) (unsigned long *fetch, unsigned long *dest, unsigned long value, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_ulong_atomic_fetch_xor_nbi_func\fP) (unsigned long *fetch, unsigned long *dest, unsigned long value, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_long_put_signal_func\fP) (long *dest, const long *source, size_t nelems, uint64_t *sig_addr, uint64_t signal, int sig_op, int pe)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_long_put_signal_nbi_func\fP) (long *dest, const long *source, size_t nelems, uint64_t *sig_addr, uint64_t signal, int sig_op, int pe)"
.br
.ti -1c
.RI "typedef long(* \fBshmem_signal_fetch_func\fP) (const uint64_t *sig_addr)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_sync_func\fP) (int PE_start, int logPE_stride, int PE_size, long *pSync)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_sync_all_func\fP) (void)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_long_alltoall_func\fP) (shmem_team_t team, long *dest, const long *source, size_t nelems)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_long_alltoalls_func\fP) (shmem_team_t team, long *dest, const long *source, ptrdiff_t dst, ptrdiff_t sst, size_t nelems)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_long_broadcast_func\fP) (shmem_team_t team, long *dest, const long *source, size_t nelems, int PE_root)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_long_collect_func\fP) (shmem_team_t team, long *dest, const long *source, size_t nelems)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_long_fcollect_func\fP) (shmem_team_t team, long *dest, const long *source, size_t nelems)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_long_and_reduce_func\fP) (shmem_team_t team, long *dest, const long *source, size_t nreduce)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_long_or_reduce_func\fP) (shmem_team_t team, long *dest, const long *source, size_t nreduce)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_long_xor_reduce_func\fP) (shmem_team_t team, long *dest, const long *source, size_t nreduce)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_long_max_reduce_func\fP) (shmem_team_t team, long *dest, const long *source, size_t nreduce)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_long_min_reduce_func\fP) (shmem_team_t team, long *dest, const long *source, size_t nreduce)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_long_sum_reduce_func\fP) (shmem_team_t team, long *dest, const long *source, size_t nreduce)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_long_prod_reduce_func\fP) (shmem_team_t team, long *dest, const long *source, size_t nreduce)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_long_wait_until_func\fP) (long *ivar, int cmp, long cmp_value)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_long_wait_until_all_func\fP) (long *ivars, size_t nelems, const int *status, int cmp, long cmp_value)"
.br
.ti -1c
.RI "typedef size_t(* \fBshmem_long_wait_until_any_func\fP) (long *ivars, size_t nelems, const int *status, int cmp, long cmp_value)"
.br
.ti -1c
.RI "typedef size_t(* \fBshmem_long_wait_until_some_func\fP) (long *ivars, size_t nelems, size_t *indices, const int *status, int cmp, long cmp_value)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_long_wait_until_all_vector_func\fP) (long *ivars, size_t nelems, const int *status, int cmp, long *cmp_values)"
.br
.ti -1c
.RI "typedef size_t(* \fBshmem_long_wait_until_any_vector_func\fP) (long *ivars, size_t nelems, const int *status, int cmp, long *cmp_values)"
.br
.ti -1c
.RI "typedef size_t(* \fBshmem_long_wait_until_some_vector_func\fP) (long *ivars, size_t nelems, size_t *indices, const int *status, int cmp, long *cmp_values)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_long_test_func\fP) (long *ivar, int cmp, long cmp_value)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_long_test_all_func\fP) (long *ivars, size_t nelems, const int *status, int cmp, long cmp_value)"
.br
.ti -1c
.RI "typedef size_t(* \fBshmem_long_test_any_func\fP) (long *ivars, size_t nelems, const int *status, int cmp, long cmp_value)"
.br
.ti -1c
.RI "typedef size_t(* \fBshmem_long_test_some_func\fP) (long *ivars, size_t nelems, size_t *indices, const int *status, int cmp, long cmp_value)"
.br
.ti -1c
.RI "typedef int(* \fBshmem_long_test_all_vector_func\fP) (long *ivars, size_t nelems, const int *status, int cmp, long *cmp_values)"
.br
.ti -1c
.RI "typedef size_t(* \fBshmem_long_test_any_vector_func\fP) (long *ivars, size_t nelems, const int *status, int cmp, long *cmp_values)"
.br
.ti -1c
.RI "typedef size_t(* \fBshmem_long_test_some_vector_func\fP) (long *ivars, size_t nelems, size_t *indices, const int *status, int cmp, long *cmp_values)"
.br
.ti -1c
.RI "typedef uint64_t(* \fBshmem_signal_wait_until_func\fP) (uint64_t *sig_addr, int cmp, uint64_t cmp_value)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_fence_func\fP) (void)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_quiet_func\fP) (void)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_set_lock_func\fP) (long *lock)"
.br
.ti -1c
.RI "typedef void(* \fBshmem_clear_lock_func\fP) (long *lock)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "bool \fBload_routines\fP ()"
.br
.RI "Loads the OpenSHMEM routines dynamically\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBshmem_fake_routine_func\fP \fBp_shmem_fake_routine\fP"
.br
.ti -1c
.RI "\fBshmem_init_func\fP \fBp_shmem_init\fP"
.br
.ti -1c
.RI "\fBshmem_init_thread_func\fP \fBp_shmem_init_thread\fP"
.br
.ti -1c
.RI "\fBshmem_finalize_func\fP \fBp_shmem_finalize\fP"
.br
.ti -1c
.RI "\fBshmem_my_pe_func\fP \fBp_shmem_my_pe\fP"
.br
.ti -1c
.RI "\fBshmem_n_pes_func\fP \fBp_shmem_n_pes\fP"
.br
.ti -1c
.RI "\fBshmem_pe_accessible_func\fP \fBp_shmem_pe_accessible\fP"
.br
.ti -1c
.RI "\fBshmem_barrier_all_func\fP \fBp_shmem_barrier_all\fP"
.br
.ti -1c
.RI "\fBshmem_barrier_func\fP \fBp_shmem_barrier\fP"
.br
.ti -1c
.RI "\fBshmem_info_get_version_func\fP \fBp_shmem_info_get_version\fP"
.br
.ti -1c
.RI "\fBshmem_info_get_name_func\fP \fBp_shmem_info_get_name\fP"
.br
.ti -1c
.RI "\fBshmem_global_exit_func\fP \fBp_shmem_global_exit\fP"
.br
.ti -1c
.RI "\fBshmem_query_thread_func\fP \fBp_shmem_query_thread\fP"
.br
.ti -1c
.RI "\fBshmem_ptr_func\fP \fBp_shmem_ptr\fP"
.br
.ti -1c
.RI "\fBshmem_malloc_func\fP \fBp_shmem_malloc\fP"
.br
.ti -1c
.RI "\fBshmem_free_func\fP \fBp_shmem_free\fP"
.br
.ti -1c
.RI "\fBshmem_realloc_func\fP \fBp_shmem_realloc\fP"
.br
.ti -1c
.RI "\fBshmem_align_func\fP \fBp_shmem_align\fP"
.br
.ti -1c
.RI "\fBshmem_malloc_with_hints_func\fP \fBp_shmem_malloc_with_hints\fP"
.br
.ti -1c
.RI "\fBshmem_calloc_func\fP \fBp_shmem_calloc\fP"
.br
.ti -1c
.RI "\fBshmem_addr_accessible_func\fP \fBp_shmem_addr_accessible\fP"
.br
.ti -1c
.RI "\fBshmem_team_my_pe_func\fP \fBp_shmem_team_my_pe\fP"
.br
.ti -1c
.RI "\fBshmem_team_n_pes_func\fP \fBp_shmem_team_n_pes\fP"
.br
.ti -1c
.RI "\fBshmem_team_get_config_func\fP \fBp_shmem_team_get_config\fP"
.br
.ti -1c
.RI "\fBshmem_team_translate_pe_func\fP \fBp_shmem_team_translate_pe\fP"
.br
.ti -1c
.RI "\fBshmem_team_split_strided_func\fP \fBp_shmem_team_split_strided\fP"
.br
.ti -1c
.RI "\fBshmem_team_split_2d_func\fP \fBp_shmem_team_split_2d\fP"
.br
.ti -1c
.RI "\fBshmem_team_destroy_func\fP \fBp_shmem_team_destroy\fP"
.br
.ti -1c
.RI "\fBshmem_ctx_create_func\fP \fBp_shmem_ctx_create\fP"
.br
.ti -1c
.RI "\fBshmem_team_create_ctx_func\fP \fBp_shmem_team_create_ctx\fP"
.br
.ti -1c
.RI "\fBshmem_ctx_destroy_func\fP \fBp_shmem_ctx_destroy\fP"
.br
.ti -1c
.RI "\fBshmem_ctx_get_team_func\fP \fBp_shmem_ctx_get_team\fP"
.br
.ti -1c
.RI "\fBshmem_long_put_func\fP \fBp_shmem_long_put\fP"
.br
.ti -1c
.RI "\fBshmem_long_p_func\fP \fBp_shmem_long_p\fP"
.br
.ti -1c
.RI "\fBshmem_long_iput_func\fP \fBp_shmem_long_iput\fP"
.br
.ti -1c
.RI "\fBshmem_long_get_func\fP \fBp_shmem_long_get\fP"
.br
.ti -1c
.RI "\fBshmem_long_g_func\fP \fBp_shmem_long_g\fP"
.br
.ti -1c
.RI "\fBshmem_long_iget_func\fP \fBp_shmem_long_iget\fP"
.br
.ti -1c
.RI "\fBshmem_long_put_nbi_func\fP \fBp_shmem_long_put_nbi\fP"
.br
.ti -1c
.RI "\fBshmem_long_get_nbi_func\fP \fBp_shmem_long_get_nbi\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_fetch_func\fP \fBp_shmem_ulong_atomic_fetch\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_set_func\fP \fBp_shmem_ulong_atomic_set\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_compare_swap_func\fP \fBp_shmem_ulong_atomic_compare_swap\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_swap_func\fP \fBp_shmem_ulong_atomic_swap\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_fetch_inc_func\fP \fBp_shmem_ulong_atomic_fetch_inc\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_inc_func\fP \fBp_shmem_ulong_atomic_inc\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_fetch_add_func\fP \fBp_shmem_ulong_atomic_fetch_add\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_add_func\fP \fBp_shmem_ulong_atomic_add\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_fetch_and_func\fP \fBp_shmem_ulong_atomic_fetch_and\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_and_func\fP \fBp_shmem_ulong_atomic_and\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_fetch_or_func\fP \fBp_shmem_ulong_atomic_fetch_or\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_or_func\fP \fBp_shmem_ulong_atomic_or\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_fetch_xor_func\fP \fBp_shmem_ulong_atomic_fetch_xor\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_xor_func\fP \fBp_shmem_ulong_atomic_xor\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_fetch_nbi_func\fP \fBp_shmem_ulong_atomic_fetch_nbi\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_compare_swap_nbi_func\fP \fBp_shmem_ulong_atomic_compare_swap_nbi\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_swap_nbi_func\fP \fBp_shmem_ulong_atomic_swap_nbi\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_fetch_inc_nbi_func\fP \fBp_shmem_ulong_atomic_fetch_inc_nbi\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_fetch_add_nbi_func\fP \fBp_shmem_ulong_atomic_fetch_add_nbi\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_fetch_and_nbi_func\fP \fBp_shmem_ulong_atomic_fetch_and_nbi\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_fetch_or_nbi_func\fP \fBp_shmem_ulong_atomic_fetch_or_nbi\fP"
.br
.ti -1c
.RI "\fBshmem_ulong_atomic_fetch_xor_nbi_func\fP \fBp_shmem_ulong_atomic_fetch_xor_nbi\fP"
.br
.ti -1c
.RI "\fBshmem_long_put_signal_func\fP \fBp_shmem_long_put_signal\fP"
.br
.ti -1c
.RI "\fBshmem_long_put_signal_nbi_func\fP \fBp_shmem_long_put_signal_nbi\fP"
.br
.ti -1c
.RI "\fBshmem_signal_fetch_func\fP \fBp_shmem_signal_fetch\fP"
.br
.ti -1c
.RI "\fBshmem_sync_func\fP \fBp_shmem_sync\fP"
.br
.ti -1c
.RI "\fBshmem_sync_all_func\fP \fBp_shmem_sync_all\fP"
.br
.ti -1c
.RI "\fBshmem_long_alltoall_func\fP \fBp_shmem_long_alltoall\fP"
.br
.ti -1c
.RI "\fBshmem_long_alltoalls_func\fP \fBp_shmem_long_alltoalls\fP"
.br
.ti -1c
.RI "\fBshmem_long_broadcast_func\fP \fBp_shmem_long_broadcast\fP"
.br
.ti -1c
.RI "\fBshmem_long_collect_func\fP \fBp_shmem_long_collect\fP"
.br
.ti -1c
.RI "\fBshmem_long_fcollect_func\fP \fBp_shmem_long_fcollect\fP"
.br
.ti -1c
.RI "\fBshmem_long_and_reduce_func\fP \fBp_shmem_long_and_reduce\fP"
.br
.ti -1c
.RI "\fBshmem_long_or_reduce_func\fP \fBp_shmem_long_or_reduce\fP"
.br
.ti -1c
.RI "\fBshmem_long_xor_reduce_func\fP \fBp_shmem_long_xor_reduce\fP"
.br
.ti -1c
.RI "\fBshmem_long_max_reduce_func\fP \fBp_shmem_long_max_reduce\fP"
.br
.ti -1c
.RI "\fBshmem_long_min_reduce_func\fP \fBp_shmem_long_min_reduce\fP"
.br
.ti -1c
.RI "\fBshmem_long_sum_reduce_func\fP \fBp_shmem_long_sum_reduce\fP"
.br
.ti -1c
.RI "\fBshmem_long_prod_reduce_func\fP \fBp_shmem_long_prod_reduce\fP"
.br
.ti -1c
.RI "\fBshmem_long_wait_until_func\fP \fBp_shmem_long_wait_until\fP"
.br
.ti -1c
.RI "\fBshmem_long_wait_until_all_func\fP \fBp_shmem_long_wait_until_all\fP"
.br
.ti -1c
.RI "\fBshmem_long_wait_until_any_func\fP \fBp_shmem_long_wait_until_any\fP"
.br
.ti -1c
.RI "\fBshmem_long_wait_until_some_func\fP \fBp_shmem_long_wait_until_some\fP"
.br
.ti -1c
.RI "\fBshmem_long_wait_until_all_vector_func\fP \fBp_shmem_long_wait_until_all_vector\fP"
.br
.ti -1c
.RI "\fBshmem_long_wait_until_any_vector_func\fP \fBp_shmem_long_wait_until_any_vector\fP"
.br
.ti -1c
.RI "\fBshmem_long_wait_until_some_vector_func\fP \fBp_shmem_long_wait_until_some_vector\fP"
.br
.ti -1c
.RI "\fBshmem_long_test_func\fP \fBp_shmem_long_test\fP"
.br
.ti -1c
.RI "\fBshmem_long_test_all_func\fP \fBp_shmem_long_test_all\fP"
.br
.ti -1c
.RI "\fBshmem_long_test_any_func\fP \fBp_shmem_long_test_any\fP"
.br
.ti -1c
.RI "\fBshmem_long_test_some_func\fP \fBp_shmem_long_test_some\fP"
.br
.ti -1c
.RI "\fBshmem_long_test_all_vector_func\fP \fBp_shmem_long_test_all_vector\fP"
.br
.ti -1c
.RI "\fBshmem_long_test_any_vector_func\fP \fBp_shmem_long_test_any_vector\fP"
.br
.ti -1c
.RI "\fBshmem_long_test_some_vector_func\fP \fBp_shmem_long_test_some_vector\fP"
.br
.ti -1c
.RI "\fBshmem_signal_wait_until_func\fP \fBp_shmem_signal_wait_until\fP"
.br
.ti -1c
.RI "\fBshmem_quiet_func\fP \fBp_shmem_quiet\fP"
.br
.ti -1c
.RI "\fBshmem_fence_func\fP \fBp_shmem_fence\fP"
.br
.ti -1c
.RI "\fBshmem_set_lock_func\fP \fBp_shmem_set_lock\fP"
.br
.ti -1c
.RI "\fBshmem_clear_lock_func\fP \fBp_shmem_clear_lock\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Contains routine pointers to avoid compiler errors if a routine is not implemented\&. 


.PP
Definition in file \fBroutines\&.hpp\fP\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef int(* shmem_addr_accessible_func) (const void *addr, int pe)"

.PP
Definition at line \fB42\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void *(* shmem_align_func) (size_t alignment, size_t size)"

.PP
Definition at line \fB39\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_barrier_all_func) (void)"

.PP
Definition at line \fB24\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_barrier_func) (int PE_start, int logPE_stride, int PE_size, long *pSync)"

.PP
Definition at line \fB25\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void *(* shmem_calloc_func) (size_t count, size_t size)"

.PP
Definition at line \fB41\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_clear_lock_func) (long *lock)"

.PP
Definition at line \fB141\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_ctx_create_func) (long options, shmem_ctx_t *ctx)"

.PP
Definition at line \fB54\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_ctx_destroy_func) (shmem_ctx_t ctx)"

.PP
Definition at line \fB56\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_ctx_get_team_func) (shmem_ctx_t ctx, shmem_team_t *team)"

.PP
Definition at line \fB57\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_fake_routine_func) (void)"

.PP
Definition at line \fB16\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_fence_func) (void)"

.PP
Definition at line \fB136\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_finalize_func) (void)"

.PP
Definition at line \fB20\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_free_func) (void *ptr)"

.PP
Definition at line \fB37\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_global_exit_func) (int status)"

.PP
Definition at line \fB28\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_info_get_name_func) (char *name)"

.PP
Definition at line \fB27\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_info_get_version_func) (int *major, int *minor)"

.PP
Definition at line \fB26\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_init_func) (void)"

.PP
Definition at line \fB19\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_init_thread_func) (int requested, int *provided)"

.PP
Definition at line \fB31\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_long_alltoall_func) (shmem_team_t team, long *dest, const long *source, size_t nelems)"

.PP
Definition at line \fB104\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_long_alltoalls_func) (shmem_team_t team, long *dest, const long *source, ptrdiff_t dst, ptrdiff_t sst, size_t nelems)"

.PP
Definition at line \fB105\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_long_and_reduce_func) (shmem_team_t team, long *dest, const long *source, size_t nreduce)"

.PP
Definition at line \fB109\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_long_broadcast_func) (shmem_team_t team, long *dest, const long *source, size_t nelems, int PE_root)"

.PP
Definition at line \fB106\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_long_collect_func) (shmem_team_t team, long *dest, const long *source, size_t nelems)"

.PP
Definition at line \fB107\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_long_fcollect_func) (shmem_team_t team, long *dest, const long *source, size_t nelems)"

.PP
Definition at line \fB108\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef long(* shmem_long_g_func) (const long *src, int pe)"

.PP
Definition at line \fB64\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_long_get_func) (long *dest, const long *src, size_t nelems, int pe)"

.PP
Definition at line \fB63\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_long_get_nbi_func) (long *dest, const long *src, size_t nelems, int pe)"

.PP
Definition at line \fB67\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_long_iget_func) (long *dest, const long *src, ptrdiff_t tst, ptrdiff_t sst, size_t nelems, int pe)"

.PP
Definition at line \fB65\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_long_iput_func) (long *dest, const long *src, ptrdiff_t tst, ptrdiff_t sst, size_t nelems, int pe)"

.PP
Definition at line \fB62\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_long_max_reduce_func) (shmem_team_t team, long *dest, const long *source, size_t nreduce)"

.PP
Definition at line \fB112\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_long_min_reduce_func) (shmem_team_t team, long *dest, const long *source, size_t nreduce)"

.PP
Definition at line \fB113\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_long_or_reduce_func) (shmem_team_t team, long *dest, const long *source, size_t nreduce)"

.PP
Definition at line \fB110\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_long_p_func) (long *dest, long value, int pe)"

.PP
Definition at line \fB61\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_long_prod_reduce_func) (shmem_team_t team, long *dest, const long *source, size_t nreduce)"

.PP
Definition at line \fB115\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_long_put_func) (long *dest, const long *src, size_t nelems, int pe)"

.PP
Definition at line \fB60\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_long_put_nbi_func) (long *dest, const long *src, size_t nelems, int pe)"

.PP
Definition at line \fB66\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_long_put_signal_func) (long *dest, const long *source, size_t nelems, uint64_t *sig_addr, uint64_t signal, int sig_op, int pe)"

.PP
Definition at line \fB97\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_long_put_signal_nbi_func) (long *dest, const long *source, size_t nelems, uint64_t *sig_addr, uint64_t signal, int sig_op, int pe)"

.PP
Definition at line \fB98\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_long_sum_reduce_func) (shmem_team_t team, long *dest, const long *source, size_t nreduce)"

.PP
Definition at line \fB114\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_long_test_all_func) (long *ivars, size_t nelems, const int *status, int cmp, long cmp_value)"

.PP
Definition at line \fB126\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_long_test_all_vector_func) (long *ivars, size_t nelems, const int *status, int cmp, long *cmp_values)"

.PP
Definition at line \fB129\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef size_t(* shmem_long_test_any_func) (long *ivars, size_t nelems, const int *status, int cmp, long cmp_value)"

.PP
Definition at line \fB127\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef size_t(* shmem_long_test_any_vector_func) (long *ivars, size_t nelems, const int *status, int cmp, long *cmp_values)"

.PP
Definition at line \fB130\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_long_test_func) (long *ivar, int cmp, long cmp_value)"

.PP
Definition at line \fB125\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef size_t(* shmem_long_test_some_func) (long *ivars, size_t nelems, size_t *indices, const int *status, int cmp, long cmp_value)"

.PP
Definition at line \fB128\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef size_t(* shmem_long_test_some_vector_func) (long *ivars, size_t nelems, size_t *indices, const int *status, int cmp, long *cmp_values)"

.PP
Definition at line \fB131\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_long_wait_until_all_func) (long *ivars, size_t nelems, const int *status, int cmp, long cmp_value)"

.PP
Definition at line \fB119\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_long_wait_until_all_vector_func) (long *ivars, size_t nelems, const int *status, int cmp, long *cmp_values)"

.PP
Definition at line \fB122\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef size_t(* shmem_long_wait_until_any_func) (long *ivars, size_t nelems, const int *status, int cmp, long cmp_value)"

.PP
Definition at line \fB120\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef size_t(* shmem_long_wait_until_any_vector_func) (long *ivars, size_t nelems, const int *status, int cmp, long *cmp_values)"

.PP
Definition at line \fB123\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_long_wait_until_func) (long *ivar, int cmp, long cmp_value)"

.PP
Definition at line \fB118\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef size_t(* shmem_long_wait_until_some_func) (long *ivars, size_t nelems, size_t *indices, const int *status, int cmp, long cmp_value)"

.PP
Definition at line \fB121\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef size_t(* shmem_long_wait_until_some_vector_func) (long *ivars, size_t nelems, size_t *indices, const int *status, int cmp, long *cmp_values)"

.PP
Definition at line \fB124\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_long_xor_reduce_func) (shmem_team_t team, long *dest, const long *source, size_t nreduce)"

.PP
Definition at line \fB111\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void *(* shmem_malloc_func) (size_t size)"

.PP
Definition at line \fB36\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void *(* shmem_malloc_with_hints_func) (size_t size, long hints)"

.PP
Definition at line \fB40\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_my_pe_func) (void)"

.PP
Definition at line \fB21\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_n_pes_func) (void)"

.PP
Definition at line \fB22\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_pe_accessible_func) (int pe)"

.PP
Definition at line \fB23\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void *(* shmem_ptr_func) (const void *dest, int pe)"

.PP
Definition at line \fB35\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_query_thread_func) (int *provided)"

.PP
Definition at line \fB32\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_quiet_func) (void)"

.PP
Definition at line \fB137\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void *(* shmem_realloc_func) (void *ptr, size_t size)"

.PP
Definition at line \fB38\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_set_lock_func) (long *lock)"

.PP
Definition at line \fB140\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef long(* shmem_signal_fetch_func) (const uint64_t *sig_addr)"

.PP
Definition at line \fB99\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef uint64_t(* shmem_signal_wait_until_func) (uint64_t *sig_addr, int cmp, uint64_t cmp_value)"

.PP
Definition at line \fB133\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_sync_all_func) (void)"

.PP
Definition at line \fB103\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_sync_func) (int PE_start, int logPE_stride, int PE_size, long *pSync)"

.PP
Definition at line \fB102\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_team_create_ctx_func) (shmem_team_t team, long options, shmem_ctx_t *ctx)"

.PP
Definition at line \fB55\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_team_destroy_func) (shmem_team_t team)"

.PP
Definition at line \fB51\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_team_get_config_func) (shmem_team_t team, long config_mask, shmem_team_config_t *config)"

.PP
Definition at line \fB47\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_team_my_pe_func) (shmem_team_t team)"

.PP
Definition at line \fB45\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_team_n_pes_func) (shmem_team_t team)"

.PP
Definition at line \fB46\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef shmem_team_t(* shmem_team_split_2d_func) (shmem_team_t parent_team, int xrange, const shmem_team_config_t *xaxis_config, long xaxis_mask, shmem_team_t *xaxis_team, const shmem_team_config_t *yaxis_config, long yaxis_mask, shmem_team_t *yaxis_team)"

.PP
Definition at line \fB50\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef shmem_team_t(* shmem_team_split_strided_func) (shmem_team_t parent_team, int start, int stride, int size, const shmem_team_config_t *config, long config_mask, shmem_team_t *new_team)"

.PP
Definition at line \fB49\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef int(* shmem_team_translate_pe_func) (shmem_team_t src_team, int src_pe, shmem_team_t dest_team)"

.PP
Definition at line \fB48\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_ulong_atomic_add_func) (const unsigned long *target, unsigned long value, int pe)"

.PP
Definition at line \fB77\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_ulong_atomic_and_func) (unsigned long *dest, unsigned long value, int pe)"

.PP
Definition at line \fB80\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef unsigned long(* shmem_ulong_atomic_compare_swap_func) (unsigned long *target, unsigned long cond, unsigned long value, int pe)"

.PP
Definition at line \fB72\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_ulong_atomic_compare_swap_nbi_func) (unsigned long *dest, unsigned long *target, unsigned long cond, unsigned long value, int pe)"

.PP
Definition at line \fB87\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef unsigned long(* shmem_ulong_atomic_fetch_add_func) (const unsigned long *target, unsigned long value, int pe)"

.PP
Definition at line \fB76\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_ulong_atomic_fetch_add_nbi_func) (unsigned long *dest, const unsigned long *target, unsigned long value, int pe)"

.PP
Definition at line \fB90\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef unsigned long(* shmem_ulong_atomic_fetch_and_func) (unsigned long *dest, unsigned long value, int pe)"

.PP
Definition at line \fB79\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_ulong_atomic_fetch_and_nbi_func) (unsigned long *fetch, unsigned long *dest, unsigned long value, int pe)"

.PP
Definition at line \fB92\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef unsigned long(* shmem_ulong_atomic_fetch_func) (const unsigned long *target, int pe)"

.PP
Definition at line \fB70\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef unsigned long(* shmem_ulong_atomic_fetch_inc_func) (const unsigned long *target, int pe)"

.PP
Definition at line \fB74\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_ulong_atomic_fetch_inc_nbi_func) (unsigned long *dest, const unsigned long *target, int pe)"

.PP
Definition at line \fB89\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_ulong_atomic_fetch_nbi_func) (unsigned long *dest, const unsigned long *target, int pe)"

.PP
Definition at line \fB86\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef unsigned long(* shmem_ulong_atomic_fetch_or_func) (unsigned long *dest, unsigned long value, int pe)"

.PP
Definition at line \fB81\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_ulong_atomic_fetch_or_nbi_func) (unsigned long *fetch, unsigned long *dest, unsigned long value, int pe)"

.PP
Definition at line \fB93\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef unsigned long(* shmem_ulong_atomic_fetch_xor_func) (unsigned long *dest, unsigned long value, int pe)"

.PP
Definition at line \fB83\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_ulong_atomic_fetch_xor_nbi_func) (unsigned long *fetch, unsigned long *dest, unsigned long value, int pe)"

.PP
Definition at line \fB94\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_ulong_atomic_inc_func) (unsigned long *target, int pe)"

.PP
Definition at line \fB75\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_ulong_atomic_or_func) (unsigned long *dest, unsigned long value, int pe)"

.PP
Definition at line \fB82\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_ulong_atomic_set_func) (unsigned long *target, unsigned long value, int pe)"

.PP
Definition at line \fB71\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef unsigned long(* shmem_ulong_atomic_swap_func) (unsigned long *target, unsigned long value, int pe)"

.PP
Definition at line \fB73\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_ulong_atomic_swap_nbi_func) (unsigned long *dest, unsigned long *target, unsigned long value, int pe)"

.PP
Definition at line \fB88\fP of file \fBroutines\&.hpp\fP\&.
.SS "typedef void(* shmem_ulong_atomic_xor_func) (unsigned long *dest, unsigned long value, int pe)"

.PP
Definition at line \fB84\fP of file \fBroutines\&.hpp\fP\&.
.SH "Function Documentation"
.PP 
.SS "bool load_routines ()"

.PP
Loads the OpenSHMEM routines dynamically\&. 
.PP
\fBReturns\fP
.RS 4
True if successful, false if otherwise
.RE
.PP
This function loads the OpenSHMEM routines at runtime using dynamic linking\&.
.PP
\fBReturns\fP
.RS 4
True if successful, false otherwise\&. 
.RE
.PP

.PP
Definition at line \fB143\fP of file \fBroutines\&.cpp\fP\&.
.nf
143                      {
144   void *handle = dlopen(NULL, RTLD_LAZY);
145   if (!handle) {
146     std::cerr << "Failed to open handle: " << dlerror() << std::endl;
147     return false;
148   }
149 
150   p_shmem_fake_routine = reinterpret_cast<shmem_fake_routine_func>(dlsym(handle, "shmem_fake_routine"));
151 
152   /* Setup, Exit, and Query Routines */
153   p_shmem_init = reinterpret_cast<shmem_init_func>(dlsym(handle, "shmem_init"));
154   p_shmem_finalize = reinterpret_cast<shmem_finalize_func>(dlsym(handle, "shmem_finalize"));
155   p_shmem_my_pe = reinterpret_cast<shmem_my_pe_func>(dlsym(handle, "shmem_my_pe"));
156   p_shmem_n_pes = reinterpret_cast<shmem_n_pes_func>(dlsym(handle, "shmem_n_pes"));
157   p_shmem_pe_accessible = reinterpret_cast<shmem_pe_accessible_func>(dlsym(handle, "shmem_pe_accessible"));
158   p_shmem_barrier_all = reinterpret_cast<shmem_barrier_all_func>(dlsym(handle, "shmem_barrier_all"));
159   p_shmem_barrier = reinterpret_cast<shmem_barrier_func>(dlsym(handle, "shmem_barrier"));
160   p_shmem_info_get_version = reinterpret_cast<shmem_info_get_version_func>(dlsym(handle, "shmem_info_get_version"));
161   p_shmem_info_get_name = reinterpret_cast<shmem_info_get_name_func>(dlsym(handle, "shmem_info_get_name"));
162   p_shmem_global_exit = reinterpret_cast<shmem_global_exit_func>(dlsym(handle, "shmem_global_exit"));
163 
164   /* Thread Support Routines */
165   p_shmem_init_thread = reinterpret_cast<shmem_init_thread_func>(dlsym(handle, "shmem_init_thread"));
166   p_shmem_query_thread = reinterpret_cast<shmem_query_thread_func>(dlsym(handle, "shmem_query_thread"));
167 
168   /* Memory Management Routines */
169   p_shmem_ptr = reinterpret_cast<shmem_ptr_func>(dlsym(handle, "shmem_ptr"));
170   p_shmem_malloc = reinterpret_cast<shmem_malloc_func>(dlsym(handle, "shmem_malloc"));
171   p_shmem_free = reinterpret_cast<shmem_free_func>(dlsym(handle, "shmem_free"));
172   p_shmem_realloc = reinterpret_cast<shmem_realloc_func>(dlsym(handle, "shmem_realloc"));
173   p_shmem_align = reinterpret_cast<shmem_align_func>(dlsym(handle, "shmem_align"));
174   p_shmem_malloc_with_hints = reinterpret_cast<shmem_malloc_with_hints_func>(dlsym(handle, "shmem_malloc_with_hints"));
175   p_shmem_calloc = reinterpret_cast<shmem_calloc_func>(dlsym(handle, "shmem_calloc"));
176   p_shmem_addr_accessible = reinterpret_cast<shmem_addr_accessible_func>(dlsym(handle, "shmem_addr_accessible"));
177 
178   /* Team Management Routines */
179   p_shmem_team_my_pe = reinterpret_cast<shmem_team_my_pe_func>(dlsym(handle, "shmem_team_my_pe"));
180   p_shmem_team_n_pes = reinterpret_cast<shmem_team_n_pes_func>(dlsym(handle, "shmem_team_n_pes"));
181   p_shmem_team_get_config = reinterpret_cast<shmem_team_get_config_func>(dlsym(handle, "shmem_team_get_config"));
182   p_shmem_team_translate_pe = reinterpret_cast<shmem_team_translate_pe_func>(dlsym(handle, "shmem_team_translate_pe"));
183   p_shmem_team_split_strided = reinterpret_cast<shmem_team_split_strided_func>(dlsym(handle, "shmem_team_split_strided"));
184   p_shmem_team_split_2d = reinterpret_cast<shmem_team_split_2d_func>(dlsym(handle, "shmem_team_split_2d"));
185   p_shmem_team_destroy = reinterpret_cast<shmem_team_destroy_func>(dlsym(handle, "shmem_team_destroy"));
186 
187   /* Communication/Context Management Routines */
188   p_shmem_ctx_create = reinterpret_cast<shmem_ctx_create_func>(dlsym(handle, "shmem_ctx_create"));
189   p_shmem_team_create_ctx = reinterpret_cast<shmem_team_create_ctx_func>(dlsym(handle, "shmem_team_create_ctx"));
190   p_shmem_ctx_destroy = reinterpret_cast<shmem_ctx_destroy_func>(dlsym(handle, "shmem_ctx_destroy"));
191   p_shmem_ctx_get_team = reinterpret_cast<shmem_ctx_get_team_func>(dlsym(handle, "shmem_ctx_get_team"));
192 
193   /* Remote Access Routines */
194   p_shmem_long_put = reinterpret_cast<shmem_long_put_func>(dlsym(handle, "shmem_long_put"));
195   p_shmem_long_p = reinterpret_cast<shmem_long_p_func>(dlsym(handle, "shmem_long_p"));
196   p_shmem_long_iput = reinterpret_cast<shmem_long_iput_func>(dlsym(handle, "shmem_long_iput"));
197   p_shmem_long_get = reinterpret_cast<shmem_long_get_func>(dlsym(handle, "shmem_long_get"));
198   p_shmem_long_g = reinterpret_cast<shmem_long_g_func>(dlsym(handle, "shmem_long_g"));
199   p_shmem_long_iget = reinterpret_cast<shmem_long_iget_func>(dlsym(handle, "shmem_long_iget"));
200   p_shmem_long_put_nbi = reinterpret_cast<shmem_long_put_nbi_func>(dlsym(handle, "shmem_long_put_nbi"));
201   p_shmem_long_get_nbi = reinterpret_cast<shmem_long_get_nbi_func>(dlsym(handle, "shmem_long_get_nbi"));
202 
203   /* Atomic Memory Operations */
204   p_shmem_ulong_atomic_fetch = reinterpret_cast<shmem_ulong_atomic_fetch_func>(dlsym(handle, "shmem_ulong_atomic_fetch"));
205   p_shmem_ulong_atomic_set = reinterpret_cast<shmem_ulong_atomic_set_func>(dlsym(handle, "shmem_ulong_atomic_set"));
206   p_shmem_ulong_atomic_compare_swap = reinterpret_cast<shmem_ulong_atomic_compare_swap_func>(dlsym(handle, "shmem_ulong_atomic_compare_swap"));
207   p_shmem_ulong_atomic_swap = reinterpret_cast<shmem_ulong_atomic_swap_func>(dlsym(handle, "shmem_ulong_atomic_swap"));
208   p_shmem_ulong_atomic_fetch_inc = reinterpret_cast<shmem_ulong_atomic_fetch_inc_func>(dlsym(handle, "shmem_ulong_atomic_fetch_inc"));
209   p_shmem_ulong_atomic_inc = reinterpret_cast<shmem_ulong_atomic_inc_func>(dlsym(handle, "shmem_ulong_atomic_inc"));
210   p_shmem_ulong_atomic_fetch_add = reinterpret_cast<shmem_ulong_atomic_fetch_add_func>(dlsym(handle, "shmem_ulong_atomic_fetch_add"));
211   p_shmem_ulong_atomic_add = reinterpret_cast<shmem_ulong_atomic_add_func>(dlsym(handle, "shmem_ulong_atomic_add"));
212   p_shmem_ulong_atomic_fetch_and = reinterpret_cast<shmem_ulong_atomic_fetch_and_func>(dlsym(handle, "shmem_ulong_atomic_fetch_and"));
213   p_shmem_ulong_atomic_and = reinterpret_cast<shmem_ulong_atomic_and_func>(dlsym(handle, "shmem_ulong_atomic_and"));
214   p_shmem_ulong_atomic_fetch_or = reinterpret_cast<shmem_ulong_atomic_fetch_or_func>(dlsym(handle, "shmem_ulong_atomic_fetch_or"));
215   p_shmem_ulong_atomic_or = reinterpret_cast<shmem_ulong_atomic_or_func>(dlsym(handle, "shmem_ulong_atomic_or"));
216   p_shmem_ulong_atomic_fetch_xor = reinterpret_cast<shmem_ulong_atomic_fetch_xor_func>(dlsym(handle, "shmem_ulong_atomic_fetch_xor"));
217   p_shmem_ulong_atomic_xor = reinterpret_cast<shmem_ulong_atomic_xor_func>(dlsym(handle, "shmem_ulong_atomic_xor"));
218 
219   p_shmem_ulong_atomic_fetch_nbi = reinterpret_cast<shmem_ulong_atomic_fetch_nbi_func>(dlsym(handle, "shmem_ulong_atomic_fetch_nbi"));
220   p_shmem_ulong_atomic_compare_swap_nbi = reinterpret_cast<shmem_ulong_atomic_compare_swap_nbi_func>(dlsym(handle, "shmem_ulong_atomic_compare_swap_nbi"));
221   p_shmem_ulong_atomic_swap_nbi = reinterpret_cast<shmem_ulong_atomic_swap_nbi_func>(dlsym(handle, "shmem_ulong_atomic_swap_nbi"));
222   p_shmem_ulong_atomic_fetch_inc_nbi = reinterpret_cast<shmem_ulong_atomic_fetch_inc_nbi_func>(dlsym(handle, "shmem_ulong_atomic_fetch_inc_nbi"));
223   p_shmem_ulong_atomic_fetch_add_nbi = reinterpret_cast<shmem_ulong_atomic_fetch_add_nbi_func>(dlsym(handle, "shmem_ulong_atomic_fetch_add_nbi"));
224   p_shmem_ulong_atomic_fetch_and_nbi = reinterpret_cast<shmem_ulong_atomic_fetch_and_nbi_func>(dlsym(handle, "shmem_ulong_atomic_fetch_and_nbi"));
225   p_shmem_ulong_atomic_fetch_or_nbi = reinterpret_cast<shmem_ulong_atomic_fetch_or_nbi_func>(dlsym(handle, "shmem_ulong_atomic_fetch_or_nbi"));
226   p_shmem_ulong_atomic_fetch_xor_nbi = reinterpret_cast<shmem_ulong_atomic_fetch_xor_nbi_func>(dlsym(handle, "shmem_ulong_atomic_fetch_xor_nbi"));
227 
228   /* Signaling Operations */
229   p_shmem_signal_fetch = reinterpret_cast<shmem_signal_fetch_func>(dlsym(handle, "shmem_signal_fetch"));
230   p_shmem_long_put_signal = reinterpret_cast<shmem_long_put_signal_func>(dlsym(handle, "shmem_long_put_signal"));
231   p_shmem_long_put_signal_nbi = reinterpret_cast<shmem_long_put_signal_nbi_func>(dlsym(handle, "shmem_long_put_signal_nbi"));
232 
233   /* Collective Routines */
234   p_shmem_sync = reinterpret_cast<shmem_sync_func>(dlsym(handle, "shmem_sync"));
235   p_shmem_sync_all = reinterpret_cast<shmem_sync_all_func>(dlsym(handle, "shmem_sync_all"));
236   p_shmem_long_alltoall = reinterpret_cast<shmem_long_alltoall_func>(dlsym(handle, "shmem_long_alltoall"));
237   p_shmem_long_alltoalls = reinterpret_cast<shmem_long_alltoalls_func>(dlsym(handle, "shmem_long_alltoalls"));
238   p_shmem_long_broadcast = reinterpret_cast<shmem_long_broadcast_func>(dlsym(handle, "shmem_long_broadcast"));
239   p_shmem_long_collect = reinterpret_cast<shmem_long_collect_func>(dlsym(handle, "shmem_long_collect"));
240   p_shmem_long_fcollect = reinterpret_cast<shmem_long_fcollect_func>(dlsym(handle, "shmem_long_fcollect"));
241   p_shmem_long_and_reduce = reinterpret_cast<shmem_long_and_reduce_func>(dlsym(handle, "shmem_long_and_reduce"));
242   p_shmem_long_or_reduce = reinterpret_cast<shmem_long_or_reduce_func>(dlsym(handle, "shmem_long_or_reduce"));
243   p_shmem_long_xor_reduce = reinterpret_cast<shmem_long_xor_reduce_func>(dlsym(handle, "shmem_long_xor_reduce"));
244   p_shmem_long_max_reduce = reinterpret_cast<shmem_long_max_reduce_func>(dlsym(handle, "shmem_long_max_reduce"));
245   p_shmem_long_min_reduce = reinterpret_cast<shmem_long_min_reduce_func>(dlsym(handle, "shmem_long_min_reduce"));
246   p_shmem_long_sum_reduce = reinterpret_cast<shmem_long_sum_reduce_func>(dlsym(handle, "shmem_long_sum_reduce"));
247   p_shmem_long_prod_reduce = reinterpret_cast<shmem_long_prod_reduce_func>(dlsym(handle, "shmem_long_prod_reduce"));
248 
249   /* Point\-to\-Point Synchronization Routines */
250   p_shmem_long_wait_until = reinterpret_cast<shmem_long_wait_until_func>(dlsym(handle, "shmem_long_wait_until"));
251   p_shmem_long_wait_until_all = reinterpret_cast<shmem_long_wait_until_all_func>(dlsym(handle, "shmem_long_wait_until_all"));
252   p_shmem_long_wait_until_any = reinterpret_cast<shmem_long_wait_until_any_func>(dlsym(handle, "shmem_long_wait_until_any"));
253   p_shmem_long_wait_until_some = reinterpret_cast<shmem_long_wait_until_some_func>(dlsym(handle, "shmem_long_wait_until_some"));
254   p_shmem_long_wait_until_all_vector = reinterpret_cast<shmem_long_wait_until_all_vector_func>(dlsym(handle, "shmem_long_wait_until_all_vector"));
255   p_shmem_long_wait_until_any_vector = reinterpret_cast<shmem_long_wait_until_any_vector_func>(dlsym(handle, "shmem_long_wait_until_any_vector"));
256   p_shmem_long_wait_until_some_vector = reinterpret_cast<shmem_long_wait_until_some_vector_func>(dlsym(handle, "shmem_long_wait_until_some_vector"));
257   p_shmem_long_test = reinterpret_cast<shmem_long_test_func>(dlsym(handle, "shmem_long_test"));
258   p_shmem_long_test_all = reinterpret_cast<shmem_long_test_all_func>(dlsym(handle, "shmem_long_test_all"));
259   p_shmem_long_test_any = reinterpret_cast<shmem_long_test_any_func>(dlsym(handle, "shmem_long_test_any"));
260   p_shmem_long_test_some = reinterpret_cast<shmem_long_test_some_func>(dlsym(handle, "shmem_long_test_some"));
261   p_shmem_long_test_all_vector = reinterpret_cast<shmem_long_test_all_vector_func>(dlsym(handle, "shmem_long_test_all_vector"));
262   p_shmem_long_test_any_vector = reinterpret_cast<shmem_long_test_any_vector_func>(dlsym(handle, "shmem_long_test_any_vector"));
263   p_shmem_long_test_some_vector = reinterpret_cast<shmem_long_test_some_vector_func>(dlsym(handle, "shmem_long_test_some_vector"));
264   p_shmem_signal_wait_until = reinterpret_cast<shmem_signal_wait_until_func>(dlsym(handle, "shmem_signal_wait_until"));
265 
266   /* Memory Ordering Routines */
267   p_shmem_quiet = reinterpret_cast<shmem_quiet_func>(dlsym(handle, "shmem_quiet"));
268   p_shmem_fence = reinterpret_cast<shmem_fence_func>(dlsym(handle, "shmem_fence"));
269 
270   /* Distributed Locking Routines */
271   p_shmem_set_lock = reinterpret_cast<shmem_set_lock_func>(dlsym(handle, "shmem_set_lock"));
272   p_shmem_clear_lock = reinterpret_cast<shmem_clear_lock_func>(dlsym(handle, "shmem_clear_lock"));
273 
274   const char *dlsym_error = dlerror();
275   if (dlsym_error) {
276     std::cerr << "Error loading functions: " << dlsym_error << std::endl;
277     dlclose(handle);
278     return false;
279   }
280 
281   return true;
282 }
.PP
.fi

.PP
References \fBp_shmem_addr_accessible\fP, \fBp_shmem_align\fP, \fBp_shmem_barrier\fP, \fBp_shmem_barrier_all\fP, \fBp_shmem_calloc\fP, \fBp_shmem_clear_lock\fP, \fBp_shmem_ctx_create\fP, \fBp_shmem_ctx_destroy\fP, \fBp_shmem_ctx_get_team\fP, \fBp_shmem_fake_routine\fP, \fBp_shmem_fence\fP, \fBp_shmem_finalize\fP, \fBp_shmem_free\fP, \fBp_shmem_global_exit\fP, \fBp_shmem_info_get_name\fP, \fBp_shmem_info_get_version\fP, \fBp_shmem_init\fP, \fBp_shmem_init_thread\fP, \fBp_shmem_long_alltoall\fP, \fBp_shmem_long_alltoalls\fP, \fBp_shmem_long_and_reduce\fP, \fBp_shmem_long_broadcast\fP, \fBp_shmem_long_collect\fP, \fBp_shmem_long_fcollect\fP, \fBp_shmem_long_g\fP, \fBp_shmem_long_get\fP, \fBp_shmem_long_get_nbi\fP, \fBp_shmem_long_iget\fP, \fBp_shmem_long_iput\fP, \fBp_shmem_long_max_reduce\fP, \fBp_shmem_long_min_reduce\fP, \fBp_shmem_long_or_reduce\fP, \fBp_shmem_long_p\fP, \fBp_shmem_long_prod_reduce\fP, \fBp_shmem_long_put\fP, \fBp_shmem_long_put_nbi\fP, \fBp_shmem_long_put_signal\fP, \fBp_shmem_long_put_signal_nbi\fP, \fBp_shmem_long_sum_reduce\fP, \fBp_shmem_long_test\fP, \fBp_shmem_long_test_all\fP, \fBp_shmem_long_test_all_vector\fP, \fBp_shmem_long_test_any\fP, \fBp_shmem_long_test_any_vector\fP, \fBp_shmem_long_test_some\fP, \fBp_shmem_long_test_some_vector\fP, \fBp_shmem_long_wait_until\fP, \fBp_shmem_long_wait_until_all\fP, \fBp_shmem_long_wait_until_all_vector\fP, \fBp_shmem_long_wait_until_any\fP, \fBp_shmem_long_wait_until_any_vector\fP, \fBp_shmem_long_wait_until_some\fP, \fBp_shmem_long_wait_until_some_vector\fP, \fBp_shmem_long_xor_reduce\fP, \fBp_shmem_malloc\fP, \fBp_shmem_malloc_with_hints\fP, \fBp_shmem_my_pe\fP, \fBp_shmem_n_pes\fP, \fBp_shmem_pe_accessible\fP, \fBp_shmem_ptr\fP, \fBp_shmem_query_thread\fP, \fBp_shmem_quiet\fP, \fBp_shmem_realloc\fP, \fBp_shmem_set_lock\fP, \fBp_shmem_signal_fetch\fP, \fBp_shmem_signal_wait_until\fP, \fBp_shmem_sync\fP, \fBp_shmem_sync_all\fP, \fBp_shmem_team_create_ctx\fP, \fBp_shmem_team_destroy\fP, \fBp_shmem_team_get_config\fP, \fBp_shmem_team_my_pe\fP, \fBp_shmem_team_n_pes\fP, \fBp_shmem_team_split_2d\fP, \fBp_shmem_team_split_strided\fP, \fBp_shmem_team_translate_pe\fP, \fBp_shmem_ulong_atomic_add\fP, \fBp_shmem_ulong_atomic_and\fP, \fBp_shmem_ulong_atomic_compare_swap\fP, \fBp_shmem_ulong_atomic_compare_swap_nbi\fP, \fBp_shmem_ulong_atomic_fetch\fP, \fBp_shmem_ulong_atomic_fetch_add\fP, \fBp_shmem_ulong_atomic_fetch_add_nbi\fP, \fBp_shmem_ulong_atomic_fetch_and\fP, \fBp_shmem_ulong_atomic_fetch_and_nbi\fP, \fBp_shmem_ulong_atomic_fetch_inc\fP, \fBp_shmem_ulong_atomic_fetch_inc_nbi\fP, \fBp_shmem_ulong_atomic_fetch_nbi\fP, \fBp_shmem_ulong_atomic_fetch_or\fP, \fBp_shmem_ulong_atomic_fetch_or_nbi\fP, \fBp_shmem_ulong_atomic_fetch_xor\fP, \fBp_shmem_ulong_atomic_fetch_xor_nbi\fP, \fBp_shmem_ulong_atomic_inc\fP, \fBp_shmem_ulong_atomic_or\fP, \fBp_shmem_ulong_atomic_set\fP, \fBp_shmem_ulong_atomic_swap\fP, \fBp_shmem_ulong_atomic_swap_nbi\fP, and \fBp_shmem_ulong_atomic_xor\fP\&.
.SH "Variable Documentation"
.PP 
.SS "\fBshmem_addr_accessible_func\fP p_shmem_addr_accessible\fR [extern]\fP"

.PP
Definition at line \fB38\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_align_func\fP p_shmem_align\fR [extern]\fP"

.PP
Definition at line \fB35\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_barrier_func\fP p_shmem_barrier\fR [extern]\fP"

.PP
Definition at line \fB21\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_barrier_all_func\fP p_shmem_barrier_all\fR [extern]\fP"

.PP
Definition at line \fB20\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_calloc_func\fP p_shmem_calloc\fR [extern]\fP"

.PP
Definition at line \fB37\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_clear_lock_func\fP p_shmem_clear_lock\fR [extern]\fP"

.PP
Definition at line \fB134\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ctx_create_func\fP p_shmem_ctx_create\fR [extern]\fP"

.PP
Definition at line \fB50\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ctx_destroy_func\fP p_shmem_ctx_destroy\fR [extern]\fP"

.PP
Definition at line \fB52\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ctx_get_team_func\fP p_shmem_ctx_get_team\fR [extern]\fP"

.PP
Definition at line \fB53\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_fake_routine_func\fP p_shmem_fake_routine\fR [extern]\fP"

.PP
Definition at line \fB12\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_fence_func\fP p_shmem_fence\fR [extern]\fP"

.PP
Definition at line \fB130\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_finalize_func\fP p_shmem_finalize\fR [extern]\fP"

.PP
Definition at line \fB16\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_free_func\fP p_shmem_free\fR [extern]\fP"

.PP
Definition at line \fB33\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_global_exit_func\fP p_shmem_global_exit\fR [extern]\fP"

.PP
Definition at line \fB24\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_info_get_name_func\fP p_shmem_info_get_name\fR [extern]\fP"

.PP
Definition at line \fB23\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_info_get_version_func\fP p_shmem_info_get_version\fR [extern]\fP"

.PP
Definition at line \fB22\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_init_func\fP p_shmem_init\fR [extern]\fP"

.PP
Definition at line \fB15\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_init_thread_func\fP p_shmem_init_thread\fR [extern]\fP"

.PP
Definition at line \fB27\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_alltoall_func\fP p_shmem_long_alltoall\fR [extern]\fP"

.PP
Definition at line \fB98\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_alltoalls_func\fP p_shmem_long_alltoalls\fR [extern]\fP"

.PP
Definition at line \fB99\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_and_reduce_func\fP p_shmem_long_and_reduce\fR [extern]\fP"

.PP
Definition at line \fB103\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_broadcast_func\fP p_shmem_long_broadcast\fR [extern]\fP"

.PP
Definition at line \fB100\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_collect_func\fP p_shmem_long_collect\fR [extern]\fP"

.PP
Definition at line \fB101\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_fcollect_func\fP p_shmem_long_fcollect\fR [extern]\fP"

.PP
Definition at line \fB102\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_g_func\fP p_shmem_long_g\fR [extern]\fP"

.PP
Definition at line \fB60\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_get_func\fP p_shmem_long_get\fR [extern]\fP"

.PP
Definition at line \fB59\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_get_nbi_func\fP p_shmem_long_get_nbi\fR [extern]\fP"

.PP
Definition at line \fB63\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_iget_func\fP p_shmem_long_iget\fR [extern]\fP"

.PP
Definition at line \fB61\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_iput_func\fP p_shmem_long_iput\fR [extern]\fP"

.PP
Definition at line \fB58\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_max_reduce_func\fP p_shmem_long_max_reduce\fR [extern]\fP"

.PP
Definition at line \fB106\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_min_reduce_func\fP p_shmem_long_min_reduce\fR [extern]\fP"

.PP
Definition at line \fB107\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_or_reduce_func\fP p_shmem_long_or_reduce\fR [extern]\fP"

.PP
Definition at line \fB104\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_p_func\fP p_shmem_long_p\fR [extern]\fP"

.PP
Definition at line \fB57\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_prod_reduce_func\fP p_shmem_long_prod_reduce\fR [extern]\fP"

.PP
Definition at line \fB109\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_put_func\fP p_shmem_long_put\fR [extern]\fP"

.PP
Definition at line \fB56\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_put_nbi_func\fP p_shmem_long_put_nbi\fR [extern]\fP"

.PP
Definition at line \fB62\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_put_signal_func\fP p_shmem_long_put_signal\fR [extern]\fP"

.PP
Definition at line \fB92\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_put_signal_nbi_func\fP p_shmem_long_put_signal_nbi\fR [extern]\fP"

.PP
Definition at line \fB93\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_sum_reduce_func\fP p_shmem_long_sum_reduce\fR [extern]\fP"

.PP
Definition at line \fB108\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_test_func\fP p_shmem_long_test\fR [extern]\fP"

.PP
Definition at line \fB119\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_test_all_func\fP p_shmem_long_test_all\fR [extern]\fP"

.PP
Definition at line \fB120\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_test_all_vector_func\fP p_shmem_long_test_all_vector\fR [extern]\fP"

.PP
Definition at line \fB123\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_test_any_func\fP p_shmem_long_test_any\fR [extern]\fP"

.PP
Definition at line \fB121\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_test_any_vector_func\fP p_shmem_long_test_any_vector\fR [extern]\fP"

.PP
Definition at line \fB124\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_test_some_func\fP p_shmem_long_test_some\fR [extern]\fP"

.PP
Definition at line \fB122\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_test_some_vector_func\fP p_shmem_long_test_some_vector\fR [extern]\fP"

.PP
Definition at line \fB125\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_wait_until_func\fP p_shmem_long_wait_until\fR [extern]\fP"

.PP
Definition at line \fB112\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_wait_until_all_func\fP p_shmem_long_wait_until_all\fR [extern]\fP"

.PP
Definition at line \fB113\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_wait_until_all_vector_func\fP p_shmem_long_wait_until_all_vector\fR [extern]\fP"

.PP
Definition at line \fB116\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_wait_until_any_func\fP p_shmem_long_wait_until_any\fR [extern]\fP"

.PP
Definition at line \fB114\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_wait_until_any_vector_func\fP p_shmem_long_wait_until_any_vector\fR [extern]\fP"

.PP
Definition at line \fB117\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_wait_until_some_func\fP p_shmem_long_wait_until_some\fR [extern]\fP"

.PP
Definition at line \fB115\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_wait_until_some_vector_func\fP p_shmem_long_wait_until_some_vector\fR [extern]\fP"

.PP
Definition at line \fB118\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_long_xor_reduce_func\fP p_shmem_long_xor_reduce\fR [extern]\fP"

.PP
Definition at line \fB105\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_malloc_func\fP p_shmem_malloc\fR [extern]\fP"

.PP
Definition at line \fB32\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_malloc_with_hints_func\fP p_shmem_malloc_with_hints\fR [extern]\fP"

.PP
Definition at line \fB36\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_my_pe_func\fP p_shmem_my_pe\fR [extern]\fP"

.PP
Definition at line \fB17\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_n_pes_func\fP p_shmem_n_pes\fR [extern]\fP"

.PP
Definition at line \fB18\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_pe_accessible_func\fP p_shmem_pe_accessible\fR [extern]\fP"

.PP
Definition at line \fB19\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ptr_func\fP p_shmem_ptr\fR [extern]\fP"

.PP
Definition at line \fB31\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_query_thread_func\fP p_shmem_query_thread\fR [extern]\fP"

.PP
Definition at line \fB28\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_quiet_func\fP p_shmem_quiet\fR [extern]\fP"

.PP
Definition at line \fB129\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_realloc_func\fP p_shmem_realloc\fR [extern]\fP"

.PP
Definition at line \fB34\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_set_lock_func\fP p_shmem_set_lock\fR [extern]\fP"

.PP
Definition at line \fB133\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_signal_fetch_func\fP p_shmem_signal_fetch\fR [extern]\fP"

.PP
Definition at line \fB91\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_signal_wait_until_func\fP p_shmem_signal_wait_until\fR [extern]\fP"

.PP
Definition at line \fB126\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_sync_func\fP p_shmem_sync\fR [extern]\fP"

.PP
Definition at line \fB96\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_sync_all_func\fP p_shmem_sync_all\fR [extern]\fP"

.PP
Definition at line \fB97\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_team_create_ctx_func\fP p_shmem_team_create_ctx\fR [extern]\fP"

.PP
Definition at line \fB51\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_team_destroy_func\fP p_shmem_team_destroy\fR [extern]\fP"

.PP
Definition at line \fB47\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_team_get_config_func\fP p_shmem_team_get_config\fR [extern]\fP"

.PP
Definition at line \fB43\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_team_my_pe_func\fP p_shmem_team_my_pe\fR [extern]\fP"

.PP
Definition at line \fB41\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_team_n_pes_func\fP p_shmem_team_n_pes\fR [extern]\fP"

.PP
Definition at line \fB42\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_team_split_2d_func\fP p_shmem_team_split_2d\fR [extern]\fP"

.PP
Definition at line \fB46\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_team_split_strided_func\fP p_shmem_team_split_strided\fR [extern]\fP"

.PP
Definition at line \fB45\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_team_translate_pe_func\fP p_shmem_team_translate_pe\fR [extern]\fP"

.PP
Definition at line \fB44\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_add_func\fP p_shmem_ulong_atomic_add\fR [extern]\fP"

.PP
Definition at line \fB74\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_and_func\fP p_shmem_ulong_atomic_and\fR [extern]\fP"

.PP
Definition at line \fB76\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_compare_swap_func\fP p_shmem_ulong_atomic_compare_swap\fR [extern]\fP"

.PP
Definition at line \fB69\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_compare_swap_nbi_func\fP p_shmem_ulong_atomic_compare_swap_nbi\fR [extern]\fP"

.PP
Definition at line \fB82\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_fetch_func\fP p_shmem_ulong_atomic_fetch\fR [extern]\fP"

.PP
Definition at line \fB67\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_fetch_add_func\fP p_shmem_ulong_atomic_fetch_add\fR [extern]\fP"

.PP
Definition at line \fB73\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_fetch_add_nbi_func\fP p_shmem_ulong_atomic_fetch_add_nbi\fR [extern]\fP"

.PP
Definition at line \fB85\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_fetch_and_func\fP p_shmem_ulong_atomic_fetch_and\fR [extern]\fP"

.PP
Definition at line \fB75\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_fetch_and_nbi_func\fP p_shmem_ulong_atomic_fetch_and_nbi\fR [extern]\fP"

.PP
Definition at line \fB86\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_fetch_inc_func\fP p_shmem_ulong_atomic_fetch_inc\fR [extern]\fP"

.PP
Definition at line \fB71\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_fetch_inc_nbi_func\fP p_shmem_ulong_atomic_fetch_inc_nbi\fR [extern]\fP"

.PP
Definition at line \fB84\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_fetch_nbi_func\fP p_shmem_ulong_atomic_fetch_nbi\fR [extern]\fP"

.PP
Definition at line \fB81\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_fetch_or_func\fP p_shmem_ulong_atomic_fetch_or\fR [extern]\fP"

.PP
Definition at line \fB77\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_fetch_or_nbi_func\fP p_shmem_ulong_atomic_fetch_or_nbi\fR [extern]\fP"

.PP
Definition at line \fB87\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_fetch_xor_func\fP p_shmem_ulong_atomic_fetch_xor\fR [extern]\fP"

.PP
Definition at line \fB79\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_fetch_xor_nbi_func\fP p_shmem_ulong_atomic_fetch_xor_nbi\fR [extern]\fP"

.PP
Definition at line \fB88\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_inc_func\fP p_shmem_ulong_atomic_inc\fR [extern]\fP"

.PP
Definition at line \fB72\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_or_func\fP p_shmem_ulong_atomic_or\fR [extern]\fP"

.PP
Definition at line \fB78\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_set_func\fP p_shmem_ulong_atomic_set\fR [extern]\fP"

.PP
Definition at line \fB68\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_swap_func\fP p_shmem_ulong_atomic_swap\fR [extern]\fP"

.PP
Definition at line \fB70\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_swap_nbi_func\fP p_shmem_ulong_atomic_swap_nbi\fR [extern]\fP"

.PP
Definition at line \fB83\fP of file \fBroutines\&.cpp\fP\&.
.SS "\fBshmem_ulong_atomic_xor_func\fP p_shmem_ulong_atomic_xor\fR [extern]\fP"

.PP
Definition at line \fB80\fP of file \fBroutines\&.cpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for shmemvv from the source code\&.
